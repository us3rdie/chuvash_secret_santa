import "dotenv/config";

import { getRandomNumber, isAdmin, reWriteFile } from "./helpers.js";
import { readFile, readFileSync } from "fs";

import { Telegraf } from "telegraf";
const bot = new Telegraf(process.env.BOT_TOKEN);

bot.start((ctx) => {
  if (ctx.message.chat.id < 0) {
    ctx.reply("–ü–∏—à–∏ –≤ –õ–° —ç—Ç–æ–º—É –±–æ—Ç—É —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–º–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –Ω–∞ –ø–æ–¥–∞—Ä–∫–µ.", {
      reply_to_message_id: ctx.message.message_id
    });
    console.log(ctx.message);
  }

  let parsedJSON = JSON.parse(readFileSync("./db/users.json", "utf8"));

  let userAlreadyRegistred = false;
  // let userAlreadyRegistred = parsedJSON.some((e) =>
  //     e.telegram_id == ctx.message.from.id ? ctx.reply(`–ù–æ–º–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π —Ç–µ–±–µ –Ω—É–∂–Ω–æ —É–∫–∑–∞–∞—Ç—å –Ω–∞ –ø–æ–¥–∞—Ä–∫–µ: ${e.secret_santa_number}.`) : 0
  // );

  if (!userAlreadyRegistred) {
    let genRandomNumber = getRandomNumber();
    while (parsedJSON.some((e) => e.secret_santa_number == genRandomNumber)) {
      genRandomNumber = getRandomNumber();
    }

    const newUser = {
      telegram_id: ctx.message.from.id,
      first_name: ctx.message.from.first_name + (parsedJSON.length + 1),
      last_name: ctx.message.from.last_name ?? "",
      username: ctx.message.from.username,
      chat_id: ctx.message.chat.id,
      secret_santa_number: genRandomNumber,
      takes_gift_number: null
    };
    parsedJSON.push(newUser);
    reWriteFile(parsedJSON, "/start");

    return ctx.reply(
      `${ctx.message.from.first_name} ${ctx.message.from.last_name ?? ""}, —Ç–µ–ø–µ—Ä—å —Ç—ã —É—á–∞—Å—Ç–≤—É–µ—à—å –≤ –¢–∞–π–Ω–æ–º –°–∞–Ω—Ç–µ üéÖüèª` +
        `\n\n–ù–æ–º–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π —Ç–µ–±–µ –Ω—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –Ω–∞ –ø–æ–¥–∞—Ä–∫–µ: ${genRandomNumber}.`
    );
  }
});

bot.command("startsanta", (ctx) => {
  const chatData = {
    chatId: ctx.message.chat.id,
    chatTitle: ctx.message.chat.title,
    chatDateStart: ctx.message.date
  };
  ctx.reply(`–î–ª—è —á–∞—Ç–∞ (${ctx.message.chat.title}) –±—ã–ª —Å–æ–∑–¥–∞–Ω –¢–∞–π–Ω—ã–π –°–∞–Ω—Ç–∞. `);
});

bot.command("list", (ctx) => {
  let parsedJSON = JSON.parse(readFileSync("./db/users.json", "utf8"));
  let replyTextList = parsedJSON.length == 0 ? `–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç.` : `–°–ø–∏—Å–æ–∫ (${parsedJSON.length}):`;
  for (var i in parsedJSON) {
    replyTextList += `\n${Number(i) + 1}: ${parsedJSON[i].first_name} ${parsedJSON[i].last_name}`;
  }
  return ctx.reply(replyTextList, { reply_to_message_id: ctx.message.message_id });
});

bot.command("del", (ctx) => {
  if (!isAdmin(ctx.message.from.id)) {
    return ctx.reply("‚ö†Ô∏è No access.");
  }

  let deleteNumber = ctx.update.message.text.split(" ")[1] ?? 1;
  let parsedJSON = JSON.parse(readFileSync("./db/users.json", "utf8"));

  if (isNaN(deleteNumber) || deleteNumber < 1 || deleteNumber > parsedJSON.length) {
    ctx.reply(`–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑, —á–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º –∏ –Ω–µ –±–æ–ª—å—à–µ ${parsedJSON.length}.`, {
      reply_to_message_id: ctx.message.message_id
    });
  } else {
    parsedJSON.splice(deleteNumber - 1, 1);
    reWriteFile(parsedJSON, "/del");
    ctx.reply(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º ${deleteNumber} —É–¥–∞–ª–µ–Ω. –ö–æ–º–∞–Ω–¥–∞ /list –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–ø–∏—Å–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.`, {
      reply_to_message_id: ctx.message.message_id
    });
  }
});

bot.command("roll", (ctx) => {
  if (!isAdmin(ctx.message.from.id)) {
    return ctx.reply("‚ö†Ô∏è No access.");
  }

  let parsedJSON = JSON.parse(readFileSync("./db/users.json", "utf8"));

  if (parsedJSON.length < 3) {
    ctx.reply(`–ó–∞—Ä–æ–ª–ª–∏—Ç—å —Å—Ä–µ–¥–∏ ${parsedJSON.length} ${parsedJSON.length == 1 ? "—á–µ–ª–æ–≤–µ–∫–∞" : "—á–µ–ª–æ–≤–µ–∫"} –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.`);
  } else {
    //var users_ids = Array(parsedJSON.length).fill().map((e, i) => i + 1);

    let users_ids = [];
    parsedJSON.forEach((el) => {
      users_ids.push(el.secret_santa_number);
    });
    //console.log("users_secret_santa_number_massive=" + users_ids);

    var ssWriteNumber = Array.from(users_ids);

    var haveSelfGift = false;
    do {
      //Fisher‚ÄìYates shuffle https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle
      for (let i = ssWriteNumber.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [ssWriteNumber[i], ssWriteNumber[j]] = [ssWriteNumber[j], ssWriteNumber[i]];
      }

      for (var i in users_ids) {
        if (users_ids[i] == ssWriteNumber[i]) {
          haveSelfGift = true;
          break;
        } else {
          haveSelfGift = false;
        }
      }
    } while (haveSelfGift == true);

    console.log(users_ids);
    console.log(ssWriteNumber);

    var replyText = `–ô–æ—Ö–æ—Ö–æ, –≤–æ—Ç –≤–∞—à–∏ –ø–æ–¥–∞—Ä–æ—á–∫–∏ (–≤—Å–µ–≥–æ ${parsedJSON.length}):\n–ü–æ–¥–∞—Ä–æ–∫ ‚û° –£—á–∞—Å—Ç–Ω–∏–∫\n`;
    for (var i in parsedJSON) {
      parsedJSON[i].takes_gift_number = ssWriteNumber[i];
      replyText += `\n${parsedJSON[i].takes_gift_number} ‚û° ${parsedJSON[i].first_name} ${parsedJSON[i].last_name}`;
    }

    // var replyText = `–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ (–≤—Å–µ–≥–æ ${parsedJSON.length}):\n–£—á–∞—Å—Ç–Ω–∏–∫ ‚û° –ù–æ–º–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –æ–Ω –ø–∏—Å–∞–ª –Ω–∞ –ø–æ–¥–∞—Ä–∫–µ ‚û° –ù–æ–º–µ—Ä –ø–æ–¥–∞—Ä–∫–∞\n`;
    // for (var i in parsedJSON) {
    //     parsedJSON[i].takes_gift_number = ssWriteNumber[i];
    //     replyText += `\n${parsedJSON[i].first_name} ${parsedJSON[i].last_name} ‚û° ${parsedJSON[i].secret_santa_number} ‚û° ${parsedJSON[i].takes_gift_number}`;
    // }
    ctx.reply(replyText, { reply_to_message_id: ctx.message.message_id });
  }

  reWriteFile(parsedJSON, "/roll");
});

bot.help((ctx) =>
  ctx.reply(
    `–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥:` +
      `\n/start - –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∏–ª–∏ —É–∑–Ω–∞—Ç—å –∫–∞–∫–æ–π –Ω–æ–º–µ—Ä –Ω—É–∂–Ω–æ —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–∞ –ø–æ–¥–∞—Ä–∫–µ;` +
      `\n/help - –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø—Ä–∞–≤–∫—É;` +
      `\n/list - –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤;` +
      `\n/del [n] - —É–¥–∞–ª–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∏–∑ —Å–ø–∏—Å–∫–∞; (admin only)` +
      `\n/roll - –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–æ–¥–∞—Ä–∫–æ–≤. (admin only)`,
    { reply_to_message_id: ctx.message.message_id }
  )
);

bot.launch();
// Enable graceful stop
process.once("SIGINT", () => bot.stop("SIGINT"));
process.once("SIGTERM", () => bot.stop("SIGTERM"));
